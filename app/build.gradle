/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.1.0' 
    id 'application'
}

//group = 'it.unicam.cs.mdp2024.formula1game'
version = '1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal() 
}

dependencies {
    implementation "org.openjfx:javafx-controls:21.0.4"
    implementation "org.openjfx:javafx-fxml:21.0.4"
    implementation 'org.fusesource.jansi:jansi:2.4.1'
    // Use JUnit Jupiter for testing.
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}


javafx {
    version = '21.0.4'
    modules = ['javafx.controls', 'javafx.fxml']
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'it.unicam.cs.mdp.vectorrace.Main'
}

tasks.named('run') {
    systemProperty 'org.gradle.configuration-cache', 'false'
    if (System.getProperty('args') != null) {
        args System.getProperty('args').split()
    }
    systemProperty "java.awt.headless", "false"
    systemProperty "prism.order", "sw"
    standardInput = System.in
    // Enable ANSI color support for Windows
    systemProperty 'jansi.passthrough', 'true'
    
    // Disabilita la cache di configurazione per il task run
    notCompatibleWithConfigurationCache('Task :run cannot be serialized')
}

// Add GUI task
tasks.register('gui', JavaExec) {
    mainClass = 'it.unicam.cs.mdp.vectorrace.Main'
    args 'gui'
    classpath = sourceSets.main.runtimeClasspath
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
